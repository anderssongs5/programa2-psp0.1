package co.edu.udea.pruebassoftware.psp.programa2.main;

import co.edu.udea.pruebassoftware.psp.programa2.controller.Program2PSPController;
import co.edu.udea.pruebassoftware.psp.programa2.linkedlist.LinkedList;
import co.edu.udea.pruebassoftware.psp.programa2.linkedlist.Node;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.table.DefaultTableModel;

/**
 * Clase que muestra la interfaz gráfica de usuario.
 *
 * @author Andersson Garc&iacute;a Sotelo
 * @since JDK 1.8
 * @version 1.0
 */
public class Program2PSPGUI extends javax.swing.JFrame {

    private static int PROGRAM_AMOUNT = 0;
    private File[] files;
    private DefaultTableModel defaultTableModel;
    private static final String[] tableHeaders = {"Número del Programa", "Nombre de la Parte",
        "Número de Ítems", "Tamaño de la Parte", "Tamaño Total"};
    private static final JFileChooser FILE_CHOOSER;

    static {
        FILE_CHOOSER = new JFileChooser();

        FILE_CHOOSER.setFileFilter(new FileFilter() {
            @Override()
            public boolean accept(File pathname) {

                return (pathname.getAbsolutePath().endsWith(".java"));
            }

            @Override()
            public String getDescription() {

                return ("Archivos JAVA");
            }
        });
        FILE_CHOOSER.setFileSelectionMode(JFileChooser.FILES_ONLY);
        FILE_CHOOSER.setDialogTitle("Seleccionar archivos a procesar...");
    }

    public Program2PSPGUI() {
        initComponents();
        this.createComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelFilePath = new javax.swing.JLabel();
        jButtonFileSelect = new javax.swing.JButton();
        jLabelProcessResults = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabelFilePath.setFont(new java.awt.Font("DejaVu Sans", 0, 12)); // NOI18N
        jLabelFilePath.setText("Seleccionar archivos fuente");

        jButtonFileSelect.setText("Seleccionar...");
        jButtonFileSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFileSelectActionPerformed(evt);
            }
        });

        jLabelProcessResults.setFont(new java.awt.Font("DejaVu Sans", 0, 11)); // NOI18N
        jLabelProcessResults.setText("Resultados del reconocimiento:");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(224, 224, 224)
                        .addComponent(jLabelFilePath)
                        .addGap(77, 77, 77)
                        .addComponent(jButtonFileSelect))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelProcessResults)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 692, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(55, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelFilePath)
                    .addComponent(jButtonFileSelect))
                .addGap(18, 18, 18)
                .addComponent(jLabelProcessResults)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        jScrollPane1.getAccessibleContext().setAccessibleParent(jScrollPane1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // GEN-FIRST:event_jButtonFileSelectActionPerformed
    private void jButtonFileSelectActionPerformed(java.awt.event.ActionEvent evt) {
        FILE_CHOOSER.setSelectedFiles(null);
        FILE_CHOOSER.setMultiSelectionEnabled(true);
        FILE_CHOOSER.showOpenDialog(this);

        this.files = FILE_CHOOSER.getSelectedFiles();
        if (!Program2PSPController.checkFiles(this.files)) {
            JOptionPane.showMessageDialog(this, "Por favor verifique que todos "
                    + "son clases Java.", "Error en archivos", JOptionPane.ERROR);

            return;
        }

        try {
            LinkedList linkedList = Program2PSPController.processFiles(files);
            String model[][] = this.getDataModel(linkedList);
            if (PROGRAM_AMOUNT != 0) {
                int i = 0;
                while (i < model.length) {
                    this.defaultTableModel.addRow(model[i]);
                    i++;
                }
            } else {
                this.defaultTableModel = new DefaultTableModel(model, tableHeaders);
            }
            this.jTable1.setModel(this.defaultTableModel);
        } catch (IOException ex) {
            Logger.getLogger(Program2PSPGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    // GEN-LAST:event_jButtonFileSelectActionPerformed

    private String[][] getDataModel(LinkedList linkedList) {
        if (linkedList != null) {
            PROGRAM_AMOUNT++;
            String dataModel[][] = new String[linkedList.getAmount() + 1][5];
            int amount = 0;
            int position = 0;
            Node node = linkedList.getFirstNode();
            while (node != null) {
                String data[] = new String[5];
                if (node.equals(linkedList.getFirstNode())) {
                    data[0] = String.valueOf(PROGRAM_AMOUNT);
                }
                data[1] = node.getProgramClass().getPartName();
                data[2] = String.valueOf(node.getProgramClass().getMethods().size());
                data[3] = String.valueOf(node.getProgramClass().getLinesOfCode());
                amount += node.getProgramClass().getLinesOfCode();

                dataModel[position] = data;
                node = node.getNext();
                position++;
            }

            String data[] = new String[5];
            data[4] = String.valueOf(amount);
            dataModel[position] = data;

            return dataModel;
        }

        return null;
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Program2PSPGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Program2PSPGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Program2PSPGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Program2PSPGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Program2PSPGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonFileSelect;
    private javax.swing.JLabel jLabelFilePath;
    private javax.swing.JLabel jLabelProcessResults;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    private void createComponents() {
        this.defaultTableModel = new DefaultTableModel(tableHeaders, 0);
        this.jTable1.setModel(defaultTableModel);
    }
}
